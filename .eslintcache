[{"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\Board.jsx":"3","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\List.jsx":"4","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\Card.jsx":"5","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Redux\\store.js":"6","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Redux\\reducer.js":"7","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Redux\\actionTypes.js":"8","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Redux\\actions.js":"9","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\AddButton.jsx":"10","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\localStorage\\index.js":"11","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\EditButton.jsx":"12","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\ThemeContextProvider\\index.js":"13"},{"size":409,"mtime":1612196487484,"results":"14","hashOfConfig":"15"},{"size":1456,"mtime":1614612447447,"results":"16","hashOfConfig":"15"},{"size":1803,"mtime":1614612103529,"results":"17","hashOfConfig":"15"},{"size":2573,"mtime":1614538600078,"results":"18","hashOfConfig":"15"},{"size":2017,"mtime":1614538568567,"results":"19","hashOfConfig":"15"},{"size":257,"mtime":1612029153782,"results":"20","hashOfConfig":"15"},{"size":4910,"mtime":1614537063981,"results":"21","hashOfConfig":"15"},{"size":280,"mtime":1614536952718,"results":"22","hashOfConfig":"15"},{"size":1286,"mtime":1614536935973,"results":"23","hashOfConfig":"15"},{"size":3218,"mtime":1614538519976,"results":"24","hashOfConfig":"15"},{"size":297,"mtime":1612117846664,"results":"25","hashOfConfig":"15"},{"size":2571,"mtime":1614538581014,"results":"26","hashOfConfig":"15"},{"size":1277,"mtime":1612199791250,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1eft4ej",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\index.js",[],["56","57"],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\Board.jsx",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\List.jsx",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\Card.jsx",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Redux\\store.js",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Redux\\reducer.js",["58","59","60","61"],"import {ADD_LIST, ADD_CARD, DELETE_LIST, EDIT_LIST,DELETE_CARD, EDIT_CARD,DRAG_HAPPENED} from './actionTypes'\r\nimport {saveData, loadData} from '../localStorage'\r\n\r\nconst initState = {\r\n    lists : loadData('lists') || \r\n        [\r\n        {\r\n            title: \"first List\",\r\n            id: 0,\r\n            cards : [\r\n                {\r\n                    id: 2,\r\n                    title : \"card1\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    title : \"card2\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            title: \"second List\",\r\n            id: 1,\r\n            cards : [\r\n                {\r\n                    id: 4,\r\n                    title : \"card1\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport const reducer = (state = initState,{type, payload})=>{\r\n    // console.log(type, payload);\r\n    switch(type){\r\n\r\n        case ADD_LIST:\r\n            let updatedState = [...state.lists, payload]\r\n            saveData('lists', updatedState)\r\n            return{\r\n                ...state,\r\n                lists : updatedState\r\n            }\r\n\r\n        case ADD_CARD: \r\n            let newState = state.lists.map(item => String(item.id) === String(payload.listId) \r\n                                    ? {...item, cards: [...item.cards, payload.card]}\r\n                                    : item)\r\n            saveData('lists', newState)\r\n            return{\r\n                ...state,\r\n                lists: newState\r\n            }\r\n\r\n        case DELETE_LIST:\r\n            let afterDeletedLists = state.lists.filter(item => String(item.id) !== String(payload))\r\n            saveData('lists', afterDeletedLists)\r\n\r\n            return{\r\n                ...state,\r\n                lists : afterDeletedLists\r\n            }\r\n\r\n        case EDIT_LIST:\r\n            let editedLists = state.lists.map(item => String(item.id) === String(payload.listId)\r\n                                    ? {...item, title : payload.newTitle}\r\n                                    : item)\r\n            saveData('lists', editedLists)\r\n            return{\r\n                ...state,\r\n                lists : editedLists\r\n            }\r\n\r\n        case DELETE_CARD:\r\n            let afterDeleteCard = state.lists.map(item=> String(item.id) === String(payload.listId) \r\n                                            ? {...item, cards : item.cards.filter(card => String(card.id) !== String(payload.cardId))}\r\n                                            : item)\r\n            saveData('lists', afterDeleteCard)                         \r\n            return{\r\n                ...state,\r\n                lists : afterDeleteCard\r\n            }\r\n\r\n        case EDIT_CARD:\r\n            let afterEditCard = state.lists.map(item=> String(item.id) === String(payload.listId) \r\n                                            ? {...item, cards : item.cards.map(card => String(card.id) === String(payload.cardId)\r\n                                                                            ? {...card, title : payload.newTitle}\r\n                                                                            : card)}\r\n                                            : item)\r\n            saveData('lists', afterEditCard)                         \r\n            return{\r\n                ...state,\r\n                lists : afterEditCard\r\n            }\r\n         case DRAG_HAPPENED:\r\n            const {dropIdStart, dropIdEnd,\r\n                dropIndexStart, dropIndexEnd,\r\n                draggableId,type} = payload\r\n                console.log(type);\r\n            //dragginng lists\r\n            if(type === \"list\"){\r\n                const list = state.lists.splice(dropIndexStart, 1);\r\n                state.lists.splice(dropIndexEnd, 0, ...list)\r\n            }\r\n            //in the same list \r\n            else if(dropIdStart === dropIdEnd){\r\n                const list = state.lists.find(list => list.id == dropIdStart)\r\n                console.log(list);\r\n                const card = list.cards.splice(dropIndexStart, 1 )\r\n                console.log(\"card\",card);\r\n                list.cards.splice(dropIndexEnd, 0 ,...card)\r\n            }\r\n\r\n            //another list \r\n            else if(dropIdStart !== dropIdEnd){\r\n                //finding list where list start\r\n                const listStart = state.lists.find(list => dropIdStart == list.id)\r\n                //pull out card from list\r\n                const card = listStart.cards.splice(dropIndexStart, 1);\r\n                //finding list where list end\r\n                const listEnd = state.lists.find(list => dropIdEnd == list.id)\r\n                //put the card in new list\r\n                listEnd.cards.splice(dropIndexEnd, 0,...card)\r\n            }\r\n            return{\r\n                ...state,\r\n                lists : state.lists\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Redux\\actionTypes.js",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Redux\\actions.js",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\AddButton.jsx",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\localStorage\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\Components\\EditButton.jsx",[],"C:\\Users\\Lenovo\\Desktop\\Masai school\\newOne\\tasks-managment\\src\\ThemeContextProvider\\index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":99,"column":17,"nodeType":"68","messageId":"69","endLine":99,"endColumn":28},{"ruleId":"70","severity":1,"message":"71","line":108,"column":63,"nodeType":"72","messageId":"73","endLine":108,"endColumn":65},{"ruleId":"70","severity":1,"message":"71","line":118,"column":72,"nodeType":"72","messageId":"73","endLine":118,"endColumn":74},{"ruleId":"70","severity":1,"message":"71","line":122,"column":68,"nodeType":"72","messageId":"73","endLine":122,"endColumn":70},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'draggableId' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]